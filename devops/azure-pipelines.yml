# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master
- dotnetapi

jobs:
- job: API_Build
  pool:
    vmImage: 'windows-latest'
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)/api"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(build.artifactStagingDirectory)/api' 
      artifactName: 'PnP.IceCreamShop.WebApi' 
    displayName: 'Publish the PnP.IceCreamShop Web API'

- job: SPFX_Build
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '8.x'
      displayName: 'Install Node.js'

    - script: |
        npm i
        gulp bundle --ship
        gulp package-solution --ship
      displayName: 'Build DEV package'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.SourcesDirectory)/sharepoint/solution/react-aadhttpclient.sppkg' 
        artifactName: 'PnPIceCreamShopWebPart' 
      displayName: 'Publish SPFx solution'

- job: O365_Scripts
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.SourcesDirectory)/devops/release/' 
        artifactName: 'Release-scripts' 
      displayName: 'Publish release scripts'